<?php

/**
 * @file
 * Contains Ubercart Parsian payment's necessary hooks & callbacks.
 */

/**
 * Implementation of hook_menu().
 */
function uc_parsian_menu() {
  $items = array();

  $items['cart/parsian/request'] = array(
    'title' => 'Order payment request',
    'page callback' => 'uc_parsian_callback_request',
    'access callback' => 'uc_parsian_callback_request_access',
    'file' => 'uc_parsian.pages.inc',
    'type' => MENU_CALLBACK,
  );

  $items['cart/parsian/complete'] = array(
    'title' => 'Order payment complete',
    'page callback' => 'uc_parsian_callback_complete',
    'access callback' => 'uc_parsian_callback_complete_access',
    'file' => 'uc_parsian.pages.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implementation of hook_payment_method().
 *
 * @see uc_payment_method_parsian()
 */
function uc_parsian_payment_method() {
  global $base_url;
  $logo = $base_url . '/' . drupal_get_path('module', 'uc_parsian') . '/uc_parsian.png';

  $methods[] = array(
    'id' => 'parsian',
    'name' => t('Parsian Bank'),
    'title' => theme('image', $logo, '', t('Pay via Parsian Bank'), array('height' => 25, 'width' => 25), FALSE) . t('Parsian Bank'),
    'desc' => t('Redirect to Parsian bank to pay by your debit card.'),
    'callback' => 'uc_payment_method_parsian',
    'weight' => 1,
    'checkout' => TRUE,
    'no_gateway' => TRUE,
  );

  return $methods;
}

/**
 * Parsian payment settings form.
 *
 * @see uc_parsian_payment_method()
 */
function uc_payment_method_parsian($op, &$arg1) {
  switch ($op) {
    case 'settings':
      $form = array();

      $form['uc_parsian_auth_pin'] = array(
        '#type' => 'textfield',
        '#title' => t('Parsian Authentication Pin'),
        '#description' => t('Enter your authentication key which has been bundled with your server IP address by Parsian Bank.'),
        '#default_value' => variable_get('uc_parsian_auth_pin', ''),
        '#required' => TRUE,
      );

      $form['uc_parsian_gateway'] = array(
        '#type' => 'textfield',
        '#title' => t('Parsian Gateway Address'),
        '#description' => t('Do not change the default value unless you checked that Parsian technical documentation.'),
        '#default_value' => variable_get('uc_parsian_gateway', 'https://www.pec24.com/pecpaymentgateway/'),
        '#required' => TRUE,
      );

      $form['uc_parsian_soap_server'] = array(
        '#type' => 'textfield',
        '#title' => t('Parsian SOAP Server Endpoint'),
        '#description' => t('Do not change this, too. Unless you check that technical documentation.'),
        '#default_value' => variable_get('uc_parsian_soap_server', 'https://www.pec24.com/pecpaymentgateway/eshopservice.asmx?wsdl'),
        '#required' => TRUE,
      );

      $form['uc_parsian_additional_options'] = array(
        '#type' => 'fieldset',
        '#title' => t('Additional Options'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
      );

      $form['uc_parsian_additional_options']['uc_parsian_watchdog_log'] = array(
        '#type' => 'checkbox',
        '#title' => t('Log payment process errors to Watchdog.'),
        '#description' => t('If checked, all errors will be logged into Watchdog during the payment process.'),
        '#default_value' => variable_get('uc_parsian_watchdog_log', 1),
        '#return_value' => TRUE,
      );

      $form['uc_parsian_additional_options']['uc_parsian_cron_purge'] = array(
        '#type' => 'checkbox',
        '#title' => t('Purge failed payment authority codes periodically.'),
        '#description' => t('Authority codes of all successfull and failed Parsian payments will be collected. Check this to purge failed ones periodically using Cron.'),
        '#default_value' => variable_get('uc_parsian_cron_purge', 1),
        '#return_value' => TRUE,
      );

      return $form;
  }
}

/**
 * Implementation of hook_form_alter().
 *
 * Alters the "action" attribute of the order review form.
 */
function uc_parsian_form_alter(&$form, &$form_state, $form_id) {
  $order_id = intval($_SESSION['cart_order']);
  if ($form_id == 'uc_cart_checkout_review_form' && $order_id > 0) {
    $order = uc_order_load($order_id);

    if ($order->payment_method == 'parsian') {
      $form['#action'] = url('cart/parsian/request');
    }
  }
}

/**
 * Implementation of hook_cron().
 *
 * Deletes orphan authority codes generated by failed payments older than ten minutes.
 */
function uc_parsian_cron() {
  if (variable_get('uc_parsian_cron_purge', TRUE)) {
    db_query("DELETE FROM {uc_payment_parsian} WHERE status = 0 AND %d - created > %d", time(), 600);
    watchdog('cron', 'Orphan authority records generated by failed Parsian payments has been successfully removed.');
  }
}

/**
 * Implementation of hook_ucga_display().
 *
 * Ubercart Google Analytics to display
 * the e-commerce JS on the order completion page.
 */
function uc_parsian_ucga_display() {
  if (arg(0) == 'cart' && arg(1) == 'parsian' && arg(2) == 'complete') {
    return TRUE;
  }
}

/**
 * Order payment request page access callback.
 */
function uc_parsian_callback_complete_access() {
  return TRUE;
}

/**
 * Order payment completion page access callback.
 */
function uc_parsian_callback_request_access() {
  return TRUE;
}

